---
import PageLayout from "../layouts/page.astro"
import { datoClient } from "../lib/api-client"
import EventListing from "../components/event-listing.astro"
import type { Event } from "../schema/event"

const today = new Date().toISOString().split("T")[0]

const {
  data: { allEvents, _allEventsMeta },
} = await datoClient
  .post("", {
    json: {
      query: `{
        _allEventsMeta(filter: { start: { gte: "${today}" } }) {
          count
        }

        allEvents(filter: { start: { gte: "${today}" } }) {
          id
          title
          notes
          start
          end
          link
          fee
          isOnline
          mapLink
          eventType
          venueName
          organiser {
            name
          }
          _status
          _firstPublishedAt
        }
      }`,
    },
  })
  .json<{
    data: { allEvents: Array<Event>; _allEventsMeta: { count: number } }
  }>()
---

<PageLayout>
  <header class="text-center flex flex-col gap-2">
    <h1 class="font-bold text-4xl antialiased text-textFg font-sans">
      Build<span class="text-stone-400">·</span>Tech<span class="text-stone-400"
        >·</span
      >Connect
    </h1>
    <p class="text-lg">
      Upcoming events related to building and housing industry.
    </p>
  </header>
  <section class="mt-8">
    <p class="text-center text-slate-500">
      There {_allEventsMeta.count > 1 ? "are" : "is"}
      <span class="text-sky-500">{_allEventsMeta.count}</span> upcoming event{
        _allEventsMeta.count > 1 ? "s" : ""
      }.
    </p>
    <ul role="list">
      {
        allEvents.map((event) => (
          <li>
            <EventListing event={event} />
          </li>
        ))
      }
    </ul>
  </section>

  <footer class="mt-20 py-4 border-t-2 text-center text-slate-500 font-thin">
    <div class="text-sm">DISCLAIMER</div>
    <p class="">
      We try our best to present accurate information. Please consult the event
      page for most up-to-date information.
    </p>
  </footer>
</PageLayout>
